{"ast":null,"code":"var _class;\nimport { inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { apiUrls } from '../api.urls';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.http = inject(HttpClient);\n  }\n  registerService(registerObj) {\n    return this.http.post(`${apiUrls.authServiceApi}register`, registerObj);\n  }\n  loginService(loginObj) {\n    return this.http.post(`${apiUrls.authServiceApi}login`, loginObj);\n  }\n  sendEmailService(email) {\n    return this.http.post(`${apiUrls.authServiceApi}send-email`, {\n      email: email\n    });\n  }\n  resetPasswordService(restObj) {\n    return this.http.post(`${apiUrls.authServiceApi}reset-password`, restObj);\n  }\n}\n_class = AuthService;\n_class.ɵfac = function AuthService_Factory(t) {\n  return new (t || _class)();\n};\n_class.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: _class,\n  factory: _class.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["inject","HttpClient","apiUrls","AuthService","constructor","http","registerService","registerObj","post","authServiceApi","loginService","loginObj","sendEmailService","email","resetPasswordService","restObj","factory","ɵfac","providedIn"],"sources":["D:\\my-app\\MEANSTACK-APP\\client\\src\\app\\services\\auth.service.ts"],"sourcesContent":["import { Injectable, inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { apiUrls } from '../api.urls';\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class AuthService {\n  http = inject(HttpClient);\n  constructor() {}\n\n  registerService(registerObj: any) {\n    return this.http.post<any>(\n      `${apiUrls.authServiceApi}register`,\n      registerObj\n    );\n  }\n\n  loginService(loginObj: any) {\n    return this.http.post<any>(`${apiUrls.authServiceApi}login`, loginObj);\n  }\n\n  sendEmailService(email: string) {\n    return this.http.post<any>(`${apiUrls.authServiceApi}send-email`, {\n      email: email,\n    });\n  }\n  resetPasswordService(restObj: any) {\n    return this.http.post<any>(`${apiUrls.authServiceApi}reset-password`, restObj);\n  }\n}\n"],"mappings":";AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAASC,UAAU,QAAQ,sBAAsB;AACjD,SAASC,OAAO,QAAQ,aAAa;;AAKrC,OAAM,MAAOC,WAAW;EAEtBC,YAAA;IADA,KAAAC,IAAI,GAAGL,MAAM,CAACC,UAAU,CAAC;EACV;EAEfK,eAAeA,CAACC,WAAgB;IAC9B,OAAO,IAAI,CAACF,IAAI,CAACG,IAAI,CACnB,GAAGN,OAAO,CAACO,cAAc,UAAU,EACnCF,WAAW,CACZ;EACH;EAEAG,YAAYA,CAACC,QAAa;IACxB,OAAO,IAAI,CAACN,IAAI,CAACG,IAAI,CAAM,GAAGN,OAAO,CAACO,cAAc,OAAO,EAAEE,QAAQ,CAAC;EACxE;EAEAC,gBAAgBA,CAACC,KAAa;IAC5B,OAAO,IAAI,CAACR,IAAI,CAACG,IAAI,CAAM,GAAGN,OAAO,CAACO,cAAc,YAAY,EAAE;MAChEI,KAAK,EAAEA;KACR,CAAC;EACJ;EACAC,oBAAoBA,CAACC,OAAY;IAC/B,OAAO,IAAI,CAACV,IAAI,CAACG,IAAI,CAAM,GAAGN,OAAO,CAACO,cAAc,gBAAgB,EAAEM,OAAO,CAAC;EAChF;;SAtBWZ,WAAW;;mBAAXA,MAAW;AAAA;;SAAXA,MAAW;EAAAa,OAAA,EAAXb,MAAW,CAAAc,IAAA;EAAAC,UAAA,EAFV;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}